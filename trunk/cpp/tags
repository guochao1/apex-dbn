!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BIN	Makefile	/^BIN:= srbm_model_drawer srbm_minist crbm_minist crbm_kyoto crbm_model_drawer crbm_model_dumper crbm_model_swaper kyoto_data_viewer crbm_filter_drawer crbm_model_modify$/;"	m
CFRBM_DIR	Makefile	/^CFRBM_DIR:=$(PRJ_DIR)\/cfrbm$/;"	m
CRBM_DIR	Makefile	/^CRBM_DIR:=$(PRJ_DIR)\/crbm$/;"	m
GPU_MACRO	Makefile	/^	GPU_MACRO:= -D__APEX_TENSOR_USE_GPU__=0 $/;"	m
GPU_MACRO	Makefile	/^	GPU_MACRO:= -D__APEX_TENSOR_USE_GPU__=1$/;"	m
MAX_NUM_PER_LINE	crbm_model_drawer.cpp	/^const int MAX_NUM_PER_LINE = 7;$/;"	v
MAX_NUM_PER_LINE	kyoto_data_viewer.cpp	/^int MAX_NUM_PER_LINE = 7;$/;"	v
MAX_NUM_PER_LINE	srbm_model_drawer.cpp	/^const int MAX_NUM_PER_LINE = 10;$/;"	v
MAX_NUM_PER_LINEX	crbm_filter_drawer.cpp	/^const int MAX_NUM_PER_LINEX = 7;$/;"	v
NVCC	Makefile	/^	NVCC :=g++$/;"	m
NVCC	Makefile	/^	NVCC :=nvcc$/;"	m
OPT	Makefile	/^OPT:= -msse2 -O3 -fno-strict-aliasing -Wall $(GPU_MACRO)$/;"	m
OPTNVCC	Makefile	/^	OPTNVCC := -arch sm_11 -Xcompiler "$(OPT)"$/;"	m
OPTNVCC	Makefile	/^	OPTNVCC:=$(OPT) $/;"	m
PRJ_DIR	Makefile	/^PRJ_DIR:=..$/;"	m
SCALE	srbm_model_drawer.cpp	/^const int SCALE = 1;$/;"	v
SRBM_DIR	Makefile	/^SRBM_DIR:=$(PRJ_DIR)\/srbm$/;"	m
TENSOR_DIR	Makefile	/^TENSOR_DIR:=$(PRJ_DIR)\/tensor$/;"	m
TENSOR_LIB	Makefile	/^	TENSOR_LIB:=apex_tensor_cpu.o	$/;"	m
TENSOR_LIB	Makefile	/^	TENSOR_LIB:=apex_tensor_cpu.o apex_tensor_gpu.o			$/;"	m
X_MAX	srbm_model_drawer.cpp	/^const int Y_MAX = 28, X_MAX = 28; $/;"	v
Y_MAX	srbm_model_drawer.cpp	/^const int Y_MAX = 28, X_MAX = 28; $/;"	v
_CRT_SECURE_NO_DEPRECATE	crbm_kyoto.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	crbm_minist.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	crbm_model_dumper.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	crbm_model_swaper.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	srbm_kyoto.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	srbm_minist.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	srbm_minist_labeled.cpp	2;"	d	file:
_CRT_SECURE_NO_WARNINGS	crbm_kyoto.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	crbm_minist.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	crbm_model_dumper.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	crbm_model_swaper.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	kyoto_data_viewer.cpp	4;"	d	file:
_CRT_SECURE_NO_WARNINGS	srbm_kyoto.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	srbm_minist.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	srbm_minist_labeled.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	srbm_model_drawer.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINSG	crbm_filter_drawer.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINSG	crbm_model_drawer.cpp	1;"	d	file:
draw_mat	crbm_filter_drawer.cpp	/^inline void draw_mat( CTensor2D m, const char *fname, int scale ){$/;"	f
draw_mat	crbm_filter_drawer.cpp	/^inline void draw_mat( const CTensor3D &m, const char *fname, int scale ){$/;"	f
draw_mat	crbm_model_drawer.cpp	/^inline void draw_mat( CTensor3D &m, const char *fname, int method, int scale, float bs = 0.0f ){$/;"	f
draw_mat	kyoto_data_viewer.cpp	/^inline void draw_mat( const CTensor3D &m, const char *fname, int scale = 1 ){$/;"	f
filter_draw	crbm_filter_drawer.cpp	/^inline void filter_draw( const CTensor2D &pic,  const apex_rbm::CDBNModel &model, int idx, int mm, int s_max ){$/;"	f
infer_down	crbm_model_drawer.cpp	/^inline CTensor4D infer_down( CTensor4D m, CTensor4D W ){$/;"	f
infer_up	crbm_filter_drawer.cpp	/^inline CTensor3D infer_up( CTensor3D &v, const apex_rbm::CRBMModel &model ){$/;"	f
main	cfrbm_movielen.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	crbm_filter_drawer.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	crbm_kyoto.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	crbm_minist.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	crbm_model_drawer.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	crbm_model_dumper.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	crbm_model_swaper.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	kyoto_data_viewer.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	srbm_kyoto.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	srbm_minist.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	srbm_minist_labeled.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	srbm_model_drawer.cpp	/^int main( int argc, char *argv[] ){$/;"	f
norm	crbm_filter_drawer.cpp	/^inline float norm( float val, float v_min, float v_max ){$/;"	f
norm	crbm_model_drawer.cpp	/^inline float norm( float val, float v_min, float v_max ){$/;"	f
norm	srbm_model_drawer.cpp	/^inline float norm( float val, float v_min, float v_max ){$/;"	f
norm_minmax	crbm_filter_drawer.cpp	/^inline void norm_minmax( CTensor3D &m ){$/;"	f
norm_minmax	crbm_model_drawer.cpp	/^inline void norm_minmax( CTensor3D &m ){$/;"	f
norm_minmax	srbm_model_drawer.cpp	/^inline void norm_minmax( CTensor3D &m ){$/;"	f
norm_minmax2	crbm_filter_drawer.cpp	/^inline void norm_minmax2( CTensor3D &m ){$/;"	f
norm_minmax2	crbm_model_drawer.cpp	/^inline void norm_minmax2( CTensor3D &m ){$/;"	f
norm_sigmoid	crbm_model_drawer.cpp	/^inline void norm_sigmoid( CTensor3D &m, float v_bias ){$/;"	f
norm_sigmoid	srbm_model_drawer.cpp	/^inline void norm_sigmoid( CTensor3D &m, float v_bias ){$/;"	f
pool_down	crbm_model_drawer.cpp	/^inline CTensor4D pool_down( CTensor4D m , int pool_size ){$/;"	f
pool_up	crbm_filter_drawer.cpp	/^inline CTensor3D pool_up( CTensor3D &h, const apex_rbm::CRBMModel &model, int vv_num ){$/;"	f
refit	crbm_model_drawer.cpp	/^inline void refit( CTensor4D m ){$/;"	f
swap	crbm_model_swaper.cpp	/^inline void swap( CRBMModel &m, int a, int b ){$/;"	f
swap	crbm_model_swaper.cpp	/^inline void swap( CTensor4D &W, int a, int b ){$/;"	f
swap	crbm_model_swaper.cpp	/^inline void swap( TENSOR_FLOAT &a, TENSOR_FLOAT &b ){$/;"	f
